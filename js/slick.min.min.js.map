{"version":3,"names":[],"mappings":"","sources":["slick.min.min.js"],"sourcesContent":["! function (i) {\r\n  \"use strict\";\r\n  \"function\" == typeof define && define.amd ? define([\"jquery\"], i) : \"undefined\" != typeof exports ? module.exports = i(require(\"jquery\")) : i(jQuery)\r\n}(function (i) {\r\n  \"use strict\";\r\n  var e = window.Slick || {};\r\n  (e = function () {\r\n    var e = 0;\r\n    return function (t, o) {\r\n      var s, n = this;\r\n      n.defaults = {\r\n        accessibility: !0,\r\n        adaptiveHeight: !1,\r\n        appendArrows: i(t),\r\n        appendDots: i(t),\r\n        arrows: !0,\r\n        asNavFor: null,\r\n        prevArrow: '<button class=\"slick-prev\" aria-label=\"Previous\" type=\"button\">Previous</button>',\r\n        nextArrow: '<button class=\"slick-next\" aria-label=\"Next\" type=\"button\">Next</button>',\r\n        autoplay: !1,\r\n        autoplaySpeed: 3e3,\r\n        centerMode: !1,\r\n        centerPadding: \"50px\",\r\n        cssEase: \"ease\",\r\n        customPaging: function (e, t) {\r\n          return i('<button type=\"button\" />').text(t + 1)\r\n        },\r\n        dots: !1,\r\n        dotsClass: \"slick-dots\",\r\n        draggable: !0,\r\n        easing: \"linear\",\r\n        edgeFriction: .35,\r\n        fade: !1,\r\n        focusOnSelect: !1,\r\n        focusOnChange: !1,\r\n        infinite: !0,\r\n        initialSlide: 0,\r\n        lazyLoad: \"ondemand\",\r\n        mobileFirst: !1,\r\n        pauseOnHover: !0,\r\n        pauseOnFocus: !0,\r\n        pauseOnDotsHover: !1,\r\n        respondTo: \"window\",\r\n        responsive: null,\r\n        rows: 1,\r\n        rtl: !1,\r\n        slide: \"\",\r\n        slidesPerRow: 1,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        speed: 500,\r\n        swipe: !0,\r\n        swipeToSlide: !1,\r\n        touchMove: !0,\r\n        touchThreshold: 5,\r\n        useCSS: !0,\r\n        useTransform: !0,\r\n        variableWidth: !1,\r\n        vertical: !1,\r\n        verticalSwiping: !1,\r\n        waitForAnimate: !0,\r\n        zIndex: 1e3\r\n      }, n.initials = {\r\n        animating: !1,\r\n        dragging: !1,\r\n        autoPlayTimer: null,\r\n        currentDirection: 0,\r\n        currentLeft: null,\r\n        currentSlide: 0,\r\n        direction: 1,\r\n        $dots: null,\r\n        listWidth: null,\r\n        listHeight: null,\r\n        loadIndex: 0,\r\n        $nextArrow: null,\r\n        $prevArrow: null,\r\n        scrolling: !1,\r\n        slideCount: null,\r\n        slideWidth: null,\r\n        $slideTrack: null,\r\n        $slides: null,\r\n        sliding: !1,\r\n        slideOffset: 0,\r\n        swipeLeft: null,\r\n        swiping: !1,\r\n        $list: null,\r\n        touchObject: {},\r\n        transformsEnabled: !1,\r\n        unslicked: !1\r\n      }, i.extend(n, n.initials), n.activeBreakpoint = null, n.animType = null, n.animProp = null, n.breakpoints = [], n.breakpointSettings = [], n.cssTransitions = !1, n.focussed = !1, n.interrupted = !1, n.hidden = \"hidden\", n.paused = !0, n.positionProp = null, n.respondTo = null, n.rowCount = 1, n.shouldClick = !0, n.$slider = i(t), n.$slidesCache = null, n.transformType = null, n.transitionType = null, n.visibilityChange = \"visibilitychange\", n.windowWidth = 0, n.windowTimer = null, s = i(t).data(\"slick\") || {}, n.options = i.extend({}, n.defaults, o, s), n.currentSlide = n.options.initialSlide, n.originalSettings = n.options, void 0 !== document.mozHidden ? (n.hidden = \"mozHidden\", n.visibilityChange = \"mozvisibilitychange\") : void 0 !== document.webkitHidden && (n.hidden = \"webkitHidden\", n.visibilityChange = \"webkitvisibilitychange\"), n.autoPlay = i.proxy(n.autoPlay, n), n.autoPlayClear = i.proxy(n.autoPlayClear, n), n.autoPlayIterator = i.proxy(n.autoPlayIterator, n), n.changeSlide = i.proxy(n.changeSlide, n), n.clickHandler = i.proxy(n.clickHandler, n), n.selectHandler = i.proxy(n.selectHandler, n), n.setPosition = i.proxy(n.setPosition, n), n.swipeHandler = i.proxy(n.swipeHandler, n), n.dragHandler = i.proxy(n.dragHandler, n), n.keyHandler = i.proxy(n.keyHandler, n), n.instanceUid = e++, n.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/, n.registerBreakpoints(), n.init(!0)\r\n    }\r\n  }()).prototype.activateADA = function () {\r\n    this.$slideTrack.find(\".slick-active\").attr({\r\n      \"aria-hidden\": \"false\"\r\n    }).find(\"a, input, button, select\").attr({\r\n      tabindex: \"0\"\r\n    })\r\n  }, e.prototype.addSlide = e.prototype.slickAdd = function (e, t, o) {\r\n    var s = this;\r\n    if (\"boolean\" == typeof t) o = t, t = null;\r\n    else if (t < 0 || t >= s.slideCount) return !1;\r\n    s.unload(), \"number\" == typeof t ? 0 === t && 0 === s.$slides.length ? i(e).appendTo(s.$slideTrack) : o ? i(e).insertBefore(s.$slides.eq(t)) : i(e).insertAfter(s.$slides.eq(t)) : !0 === o ? i(e).prependTo(s.$slideTrack) : i(e).appendTo(s.$slideTrack), s.$slides = s.$slideTrack.children(this.options.slide), s.$slideTrack.children(this.options.slide).detach(), s.$slideTrack.append(s.$slides), s.$slides.each(function (e, t) {\r\n      i(t).attr(\"data-slick-index\", e)\r\n    }), s.$slidesCache = s.$slides, s.reinit()\r\n  }, e.prototype.animateHeight = function () {\r\n    var i = this;\r\n    if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) {\r\n      var e = i.$slides.eq(i.currentSlide).outerHeight(!0);\r\n      i.$list.animate({\r\n        height: e\r\n      }, i.options.speed)\r\n    }\r\n  }, e.prototype.animateSlide = function (e, t) {\r\n    var o = {},\r\n      s = this;\r\n    s.animateHeight(), !0 === s.options.rtl && !1 === s.options.vertical && (e = -e), !1 === s.transformsEnabled ? !1 === s.options.vertical ? s.$slideTrack.animate({\r\n      left: e\r\n    }, s.options.speed, s.options.easing, t) : s.$slideTrack.animate({\r\n      top: e\r\n    }, s.options.speed, s.options.easing, t) : !1 === s.cssTransitions ? (!0 === s.options.rtl && (s.currentLeft = -s.currentLeft), i({\r\n      animStart: s.currentLeft\r\n    }).animate({\r\n      animStart: e\r\n    }, {\r\n      duration: s.options.speed,\r\n      easing: s.options.easing,\r\n      step: function (i) {\r\n        i = Math.ceil(i), !1 === s.options.vertical ? (o[s.animType] = \"translate(\" + i + \"px, 0px)\", s.$slideTrack.css(o)) : (o[s.animType] = \"translate(0px,\" + i + \"px)\", s.$slideTrack.css(o))\r\n      },\r\n      complete: function () {\r\n        t && t.call()\r\n      }\r\n    })) : (s.applyTransition(), e = Math.ceil(e), !1 === s.options.vertical ? o[s.animType] = \"translate3d(\" + e + \"px, 0px, 0px)\" : o[s.animType] = \"translate3d(0px,\" + e + \"px, 0px)\", s.$slideTrack.css(o), t && setTimeout(function () {\r\n      s.disableTransition(), t.call()\r\n    }, s.options.speed))\r\n  }, e.prototype.getNavTarget = function () {\r\n    var e = this,\r\n      t = e.options.asNavFor;\r\n    return t && null !== t && (t = i(t).not(e.$slider)), t\r\n  }, e.prototype.asNavFor = function (e) {\r\n    var t = this.getNavTarget();\r\n    null !== t && \"object\" == typeof t && t.each(function () {\r\n      var t = i(this).slick(\"getSlick\");\r\n      t.unslicked || t.slideHandler(e, !0)\r\n    })\r\n  }, e.prototype.applyTransition = function (i) {\r\n    var e = this,\r\n      t = {};\r\n    !1 === e.options.fade ? t[e.transitionType] = e.transformType + \" \" + e.options.speed + \"ms \" + e.options.cssEase : t[e.transitionType] = \"opacity \" + e.options.speed + \"ms \" + e.options.cssEase, !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t)\r\n  }, e.prototype.autoPlay = function () {\r\n    var i = this;\r\n    i.autoPlayClear(), i.slideCount > i.options.slidesToShow && (i.autoPlayTimer = setInterval(i.autoPlayIterator, i.options.autoplaySpeed))\r\n  }, e.prototype.autoPlayClear = function () {\r\n    var i = this;\r\n    i.autoPlayTimer && clearInterval(i.autoPlayTimer)\r\n  }, e.prototype.autoPlayIterator = function () {\r\n    var i = this,\r\n      e = i.currentSlide + i.options.slidesToScroll;\r\n    i.paused || i.interrupted || i.focussed || (!1 === i.options.infinite && (1 === i.direction && i.currentSlide + 1 === i.slideCount - 1 ? i.direction = 0 : 0 === i.direction && (e = i.currentSlide - i.options.slidesToScroll, i.currentSlide - 1 == 0 && (i.direction = 1))), i.slideHandler(e))\r\n  }, e.prototype.buildArrows = function () {\r\n    var e = this;\r\n    !0 === e.options.arrows && (e.$prevArrow = i(e.options.prevArrow).addClass(\"slick-arrow\"), e.$nextArrow = i(e.options.nextArrow).addClass(\"slick-arrow\"), e.slideCount > e.options.slidesToShow ? (e.$prevArrow.removeClass(\"slick-hidden\").removeAttr(\"aria-hidden tabindex\"), e.$nextArrow.removeClass(\"slick-hidden\").removeAttr(\"aria-hidden tabindex\"), e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.prependTo(e.options.appendArrows), e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.appendTo(e.options.appendArrows), !0 !== e.options.infinite && e.$prevArrow.addClass(\"slick-disabled\").attr(\"aria-disabled\", \"true\")) : e.$prevArrow.add(e.$nextArrow).addClass(\"slick-hidden\").attr({\r\n      \"aria-disabled\": \"true\",\r\n      tabindex: \"-1\"\r\n    }))\r\n  }, e.prototype.buildDots = function () {\r\n    var e, t, o = this;\r\n    if (!0 === o.options.dots) {\r\n      for (o.$slider.addClass(\"slick-dotted\"), t = i(\"<ul />\").addClass(o.options.dotsClass), e = 0; e <= o.getDotCount(); e += 1) t.append(i(\"<li />\").append(o.options.customPaging.call(this, o, e)));\r\n      o.$dots = t.appendTo(o.options.appendDots), o.$dots.find(\"li\").first().addClass(\"slick-active\")\r\n    }\r\n  }, e.prototype.buildOut = function () {\r\n    var e = this;\r\n    e.$slides = e.$slider.children(e.options.slide + \":not(.slick-cloned)\").addClass(\"slick-slide\"), e.slideCount = e.$slides.length, e.$slides.each(function (e, t) {\r\n      i(t).attr(\"data-slick-index\", e).data(\"originalStyling\", i(t).attr(\"style\") || \"\")\r\n    }), e.$slider.addClass(\"slick-slider\"), e.$slideTrack = 0 === e.slideCount ? i('<div class=\"slick-track\"/>').appendTo(e.$slider) : e.$slides.wrapAll('<div class=\"slick-track\"/>').parent(), e.$list = e.$slideTrack.wrap('<div class=\"slick-list\"/>').parent(), e.$slideTrack.css(\"opacity\", 0), !0 !== e.options.centerMode && !0 !== e.options.swipeToSlide || (e.options.slidesToScroll = 1), i(\"img[data-lazy]\", e.$slider).not(\"[src]\").addClass(\"slick-loading\"), e.setupInfinite(), e.buildArrows(), e.buildDots(), e.updateDots(), e.setSlideClasses(\"number\" == typeof e.currentSlide ? e.currentSlide : 0), !0 === e.options.draggable && e.$list.addClass(\"draggable\")\r\n  }, e.prototype.buildRows = function () {\r\n    var i, e, t, o, s, n, r, l = this;\r\n    if (o = document.createDocumentFragment(), n = l.$slider.children(), l.options.rows > 1) {\r\n      for (r = l.options.slidesPerRow * l.options.rows, s = Math.ceil(n.length / r), i = 0; i < s; i++) {\r\n        var d = document.createElement(\"div\");\r\n        for (e = 0; e < l.options.rows; e++) {\r\n          var a = document.createElement(\"div\");\r\n          for (t = 0; t < l.options.slidesPerRow; t++) {\r\n            var c = i * r + (e * l.options.slidesPerRow + t);\r\n            n.get(c) && a.appendChild(n.get(c))\r\n          }\r\n          d.appendChild(a)\r\n        }\r\n        o.appendChild(d)\r\n      }\r\n      l.$slider.empty().append(o), l.$slider.children().children().children().css({\r\n        width: 100 / l.options.slidesPerRow + \"%\",\r\n        display: \"inline-block\"\r\n      })\r\n    }\r\n  }, e.prototype.checkResponsive = function (e, t) {\r\n    var o, s, n, r = this,\r\n      l = !1,\r\n      d = r.$slider.width(),\r\n      a = window.innerWidth || i(window).width();\r\n    if (\"window\" === r.respondTo ? n = a : \"slider\" === r.respondTo ? n = d : \"min\" === r.respondTo && (n = Math.min(a, d)), r.options.responsive && r.options.responsive.length && null !== r.options.responsive) {\r\n      s = null;\r\n      for (o in r.breakpoints) r.breakpoints.hasOwnProperty(o) && (!1 === r.originalSettings.mobileFirst ? n < r.breakpoints[o] && (s = r.breakpoints[o]) : n > r.breakpoints[o] && (s = r.breakpoints[o]));\r\n      null !== s ? null !== r.activeBreakpoint ? (s !== r.activeBreakpoint || t) && (r.activeBreakpoint = s, \"unslick\" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : (r.activeBreakpoint = s, \"unslick\" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : null !== r.activeBreakpoint && (r.activeBreakpoint = null, r.options = r.originalSettings, !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e), l = s), e || !1 === l || r.$slider.trigger(\"breakpoint\", [r, l])\r\n    }\r\n  }, e.prototype.changeSlide = function (e, t) {\r\n    var o, s, n, r = this,\r\n      l = i(e.currentTarget);\r\n    switch (l.is(\"a\") && e.preventDefault(), l.is(\"li\") || (l = l.closest(\"li\")), n = r.slideCount % r.options.slidesToScroll != 0, o = n ? 0 : (r.slideCount - r.currentSlide) % r.options.slidesToScroll, e.data.message) {\r\n      case \"previous\":\r\n        s = 0 === o ? r.options.slidesToScroll : r.options.slidesToShow - o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide - s, !1, t);\r\n        break;\r\n      case \"next\":\r\n        s = 0 === o ? r.options.slidesToScroll : o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide + s, !1, t);\r\n        break;\r\n      case \"index\":\r\n        var d = 0 === e.data.index ? 0 : e.data.index || l.index() * r.options.slidesToScroll;\r\n        r.slideHandler(r.checkNavigable(d), !1, t), l.children().trigger(\"focus\");\r\n        break;\r\n      default:\r\n        return\r\n    }\r\n  }, e.prototype.checkNavigable = function (i) {\r\n    var e, t;\r\n    if (e = this.getNavigableIndexes(), t = 0, i > e[e.length - 1]) i = e[e.length - 1];\r\n    else\r\n      for (var o in e) {\r\n        if (i < e[o]) {\r\n          i = t;\r\n          break\r\n        }\r\n        t = e[o]\r\n      }\r\n    return i\r\n  }, e.prototype.cleanUpEvents = function () {\r\n    var e = this;\r\n    e.options.dots && null !== e.$dots && (i(\"li\", e.$dots).off(\"click.slick\", e.changeSlide).off(\"mouseenter.slick\", i.proxy(e.interrupt, e, !0)).off(\"mouseleave.slick\", i.proxy(e.interrupt, e, !1)), !0 === e.options.accessibility && e.$dots.off(\"keydown.slick\", e.keyHandler)), e.$slider.off(\"focus.slick blur.slick\"), !0 === e.options.arrows && e.slideCount > e.options.slidesToShow && (e.$prevArrow && e.$prevArrow.off(\"click.slick\", e.changeSlide), e.$nextArrow && e.$nextArrow.off(\"click.slick\", e.changeSlide), !0 === e.options.accessibility && (e.$prevArrow && e.$prevArrow.off(\"keydown.slick\", e.keyHandler), e.$nextArrow && e.$nextArrow.off(\"keydown.slick\", e.keyHandler))), e.$list.off(\"touchstart.slick mousedown.slick\", e.swipeHandler), e.$list.off(\"touchmove.slick mousemove.slick\", e.swipeHandler), e.$list.off(\"touchend.slick mouseup.slick\", e.swipeHandler), e.$list.off(\"touchcancel.slick mouseleave.slick\", e.swipeHandler), e.$list.off(\"click.slick\", e.clickHandler), i(document).off(e.visibilityChange, e.visibility), e.cleanUpSlideEvents(), !0 === e.options.accessibility && e.$list.off(\"keydown.slick\", e.keyHandler), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().off(\"click.slick\", e.selectHandler), i(window).off(\"orientationchange.slick.slick-\" + e.instanceUid, e.orientationChange), i(window).off(\"resize.slick.slick-\" + e.instanceUid, e.resize), i(\"[draggable!=true]\", e.$slideTrack).off(\"dragstart\", e.preventDefault), i(window).off(\"load.slick.slick-\" + e.instanceUid, e.setPosition)\r\n  }, e.prototype.cleanUpSlideEvents = function () {\r\n    var e = this;\r\n    e.$list.off(\"mouseenter.slick\", i.proxy(e.interrupt, e, !0)), e.$list.off(\"mouseleave.slick\", i.proxy(e.interrupt, e, !1))\r\n  }, e.prototype.cleanUpRows = function () {\r\n    var i, e = this;\r\n    e.options.rows > 1 && ((i = e.$slides.children().children()).removeAttr(\"style\"), e.$slider.empty().append(i))\r\n  }, e.prototype.clickHandler = function (i) {\r\n    !1 === this.shouldClick && (i.stopImmediatePropagation(), i.stopPropagation(), i.preventDefault())\r\n  }, e.prototype.destroy = function (e) {\r\n    var t = this;\r\n    t.autoPlayClear(), t.touchObject = {}, t.cleanUpEvents(), i(\".slick-cloned\", t.$slider).detach(), t.$dots && t.$dots.remove(), t.$prevArrow && t.$prevArrow.length && (t.$prevArrow.removeClass(\"slick-disabled slick-arrow slick-hidden\").removeAttr(\"aria-hidden aria-disabled tabindex\").css(\"display\", \"\"), t.htmlExpr.test(t.options.prevArrow) && t.$prevArrow.remove()), t.$nextArrow && t.$nextArrow.length && (t.$nextArrow.removeClass(\"slick-disabled slick-arrow slick-hidden\").removeAttr(\"aria-hidden aria-disabled tabindex\").css(\"display\", \"\"), t.htmlExpr.test(t.options.nextArrow) && t.$nextArrow.remove()), t.$slides && (t.$slides.removeClass(\"slick-slide slick-active slick-center slick-visible slick-current\").removeAttr(\"aria-hidden\").removeAttr(\"data-slick-index\").each(function () {\r\n      i(this).attr(\"style\", i(this).data(\"originalStyling\"))\r\n    }), t.$slideTrack.children(this.options.slide).detach(), t.$slideTrack.detach(), t.$list.detach(), t.$slider.append(t.$slides)), t.cleanUpRows(), t.$slider.removeClass(\"slick-slider\"), t.$slider.removeClass(\"slick-initialized\"), t.$slider.removeClass(\"slick-dotted\"), t.unslicked = !0, e || t.$slider.trigger(\"destroy\", [t])\r\n  }, e.prototype.disableTransition = function (i) {\r\n    var e = this,\r\n      t = {};\r\n    t[e.transitionType] = \"\", !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t)\r\n  }, e.prototype.fadeSlide = function (i, e) {\r\n    var t = this;\r\n    !1 === t.cssTransitions ? (t.$slides.eq(i).css({\r\n      zIndex: t.options.zIndex\r\n    }), t.$slides.eq(i).animate({\r\n      opacity: 1\r\n    }, t.options.speed, t.options.easing, e)) : (t.applyTransition(i), t.$slides.eq(i).css({\r\n      opacity: 1,\r\n      zIndex: t.options.zIndex\r\n    }), e && setTimeout(function () {\r\n      t.disableTransition(i), e.call()\r\n    }, t.options.speed))\r\n  }, e.prototype.fadeSlideOut = function (i) {\r\n    var e = this;\r\n    !1 === e.cssTransitions ? e.$slides.eq(i).animate({\r\n      opacity: 0,\r\n      zIndex: e.options.zIndex - 2\r\n    }, e.options.speed, e.options.easing) : (e.applyTransition(i), e.$slides.eq(i).css({\r\n      opacity: 0,\r\n      zIndex: e.options.zIndex - 2\r\n    }))\r\n  }, e.prototype.filterSlides = e.prototype.slickFilter = function (i) {\r\n    var e = this;\r\n    null !== i && (e.$slidesCache = e.$slides, e.unload(), e.$slideTrack.children(this.options.slide).detach(), e.$slidesCache.filter(i).appendTo(e.$slideTrack), e.reinit())\r\n  }, e.prototype.focusHandler = function () {\r\n    var e = this;\r\n    e.$slider.off(\"focus.slick blur.slick\").on(\"focus.slick blur.slick\", \"*\", function (t) {\r\n      t.stopImmediatePropagation();\r\n      var o = i(this);\r\n      setTimeout(function () {\r\n        e.options.pauseOnFocus && (e.focussed = o.is(\":focus\"), e.autoPlay())\r\n      }, 0)\r\n    })\r\n  }, e.prototype.getCurrent = e.prototype.slickCurrentSlide = function () {\r\n    return this.currentSlide\r\n  }, e.prototype.getDotCount = function () {\r\n    var i = this,\r\n      e = 0,\r\n      t = 0,\r\n      o = 0;\r\n    if (!0 === i.options.infinite)\r\n      if (i.slideCount <= i.options.slidesToShow) ++o;\r\n      else\r\n        for (; e < i.slideCount;) ++o, e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow;\r\n    else if (!0 === i.options.centerMode) o = i.slideCount;\r\n    else if (i.options.asNavFor)\r\n      for (; e < i.slideCount;) ++o, e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow;\r\n    else o = 1 + Math.ceil((i.slideCount - i.options.slidesToShow) / i.options.slidesToScroll);\r\n    return o - 1\r\n  }, e.prototype.getLeft = function (i) {\r\n    var e, t, o, s, n = this,\r\n      r = 0;\r\n    return n.slideOffset = 0, t = n.$slides.first().outerHeight(!0), !0 === n.options.infinite ? (n.slideCount > n.options.slidesToShow && (n.slideOffset = n.slideWidth * n.options.slidesToShow * -1, s = -1, !0 === n.options.vertical && !0 === n.options.centerMode && (2 === n.options.slidesToShow ? s = -1.5 : 1 === n.options.slidesToShow && (s = -2)), r = t * n.options.slidesToShow * s), n.slideCount % n.options.slidesToScroll != 0 && i + n.options.slidesToScroll > n.slideCount && n.slideCount > n.options.slidesToShow && (i > n.slideCount ? (n.slideOffset = (n.options.slidesToShow - (i - n.slideCount)) * n.slideWidth * -1, r = (n.options.slidesToShow - (i - n.slideCount)) * t * -1) : (n.slideOffset = n.slideCount % n.options.slidesToScroll * n.slideWidth * -1, r = n.slideCount % n.options.slidesToScroll * t * -1))) : i + n.options.slidesToShow > n.slideCount && (n.slideOffset = (i + n.options.slidesToShow - n.slideCount) * n.slideWidth, r = (i + n.options.slidesToShow - n.slideCount) * t), n.slideCount <= n.options.slidesToShow && (n.slideOffset = 0, r = 0), !0 === n.options.centerMode && n.slideCount <= n.options.slidesToShow ? n.slideOffset = n.slideWidth * Math.floor(n.options.slidesToShow) / 2 - n.slideWidth * n.slideCount / 2 : !0 === n.options.centerMode && !0 === n.options.infinite ? n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2) - n.slideWidth : !0 === n.options.centerMode && (n.slideOffset = 0, n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2)), e = !1 === n.options.vertical ? i * n.slideWidth * -1 + n.slideOffset : i * t * -1 + r, !0 === n.options.variableWidth && (o = n.slideCount <= n.options.slidesToShow || !1 === n.options.infinite ? n.$slideTrack.children(\".slick-slide\").eq(i) : n.$slideTrack.children(\".slick-slide\").eq(i + n.options.slidesToShow), e = !0 === n.options.rtl ? o[0] ? -1 * (n.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0, !0 === n.options.centerMode && (o = n.slideCount <= n.options.slidesToShow || !1 === n.options.infinite ? n.$slideTrack.children(\".slick-slide\").eq(i) : n.$slideTrack.children(\".slick-slide\").eq(i + n.options.slidesToShow + 1), e = !0 === n.options.rtl ? o[0] ? -1 * (n.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0, e += (n.$list.width() - o.outerWidth()) / 2)), e\r\n  }, e.prototype.getOption = e.prototype.slickGetOption = function (i) {\r\n    return this.options[i]\r\n  }, e.prototype.getNavigableIndexes = function () {\r\n    var i, e = this,\r\n      t = 0,\r\n      o = 0,\r\n      s = [];\r\n    for (!1 === e.options.infinite ? i = e.slideCount : (t = -1 * e.options.slidesToScroll, o = -1 * e.options.slidesToScroll, i = 2 * e.slideCount); t < i;) s.push(t), t = o + e.options.slidesToScroll, o += e.options.slidesToScroll <= e.options.slidesToShow ? e.options.slidesToScroll : e.options.slidesToShow;\r\n    return s\r\n  }, e.prototype.getSlick = function () {\r\n    return this\r\n  }, e.prototype.getSlideCount = function () {\r\n    var e, t, o = this;\r\n    return t = !0 === o.options.centerMode ? o.slideWidth * Math.floor(o.options.slidesToShow / 2) : 0, !0 === o.options.swipeToSlide ? (o.$slideTrack.find(\".slick-slide\").each(function (s, n) {\r\n      if (n.offsetLeft - t + i(n).outerWidth() / 2 > -1 * o.swipeLeft) return e = n, !1\r\n    }), Math.abs(i(e).attr(\"data-slick-index\") - o.currentSlide) || 1) : o.options.slidesToScroll\r\n  }, e.prototype.goTo = e.prototype.slickGoTo = function (i, e) {\r\n    this.changeSlide({\r\n      data: {\r\n        message: \"index\",\r\n        index: parseInt(i)\r\n      }\r\n    }, e)\r\n  }, e.prototype.init = function (e) {\r\n    var t = this;\r\n    i(t.$slider).hasClass(\"slick-initialized\") || (i(t.$slider).addClass(\"slick-initialized\"), t.buildRows(), t.buildOut(), t.setProps(), t.startLoad(), t.loadSlider(), t.initializeEvents(), t.updateArrows(), t.updateDots(), t.checkResponsive(!0), t.focusHandler()), e && t.$slider.trigger(\"init\", [t]), !0 === t.options.accessibility && t.initADA(), t.options.autoplay && (t.paused = !1, t.autoPlay())\r\n  }, e.prototype.initADA = function () {\r\n    var e = this,\r\n      t = Math.ceil(e.slideCount / e.options.slidesToShow),\r\n      o = e.getNavigableIndexes().filter(function (i) {\r\n        return i >= 0 && i < e.slideCount\r\n      });\r\n    e.$slides.add(e.$slideTrack.find(\".slick-cloned\")).attr({\r\n      \"aria-hidden\": \"true\",\r\n      tabindex: \"-1\"\r\n    }).find(\"a, input, button, select\").attr({\r\n      tabindex: \"-1\"\r\n    }), null !== e.$dots && (e.$slides.not(e.$slideTrack.find(\".slick-cloned\")).each(function (t) {\r\n      var s = o.indexOf(t);\r\n      i(this).attr({\r\n        role: \"tabpanel\",\r\n        id: \"slick-slide\" + e.instanceUid + t,\r\n        tabindex: -1\r\n      }), -1 !== s && i(this).attr({\r\n        \"aria-describedby\": \"slick-slide-control\" + e.instanceUid + s\r\n      })\r\n    }), e.$dots.attr(\"role\", \"tablist\").find(\"li\").each(function (s) {\r\n      var n = o[s];\r\n      i(this).attr({\r\n        role: \"presentation\"\r\n      }), i(this).find(\"button\").first().attr({\r\n        role: \"tab\",\r\n        id: \"slick-slide-control\" + e.instanceUid + s,\r\n        \"aria-controls\": \"slick-slide\" + e.instanceUid + n,\r\n        \"aria-label\": s + 1 + \" of \" + t,\r\n        \"aria-selected\": null,\r\n        tabindex: \"-1\"\r\n      })\r\n    }).eq(e.currentSlide).find(\"button\").attr({\r\n      \"aria-selected\": \"true\",\r\n      tabindex: \"0\"\r\n    }).end());\r\n    for (var s = e.currentSlide, n = s + e.options.slidesToShow; s < n; s++) e.$slides.eq(s).attr(\"tabindex\", 0);\r\n    e.activateADA()\r\n  }, e.prototype.initArrowEvents = function () {\r\n    var i = this;\r\n    !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.off(\"click.slick\").on(\"click.slick\", {\r\n      message: \"previous\"\r\n    }, i.changeSlide), i.$nextArrow.off(\"click.slick\").on(\"click.slick\", {\r\n      message: \"next\"\r\n    }, i.changeSlide), !0 === i.options.accessibility && (i.$prevArrow.on(\"keydown.slick\", i.keyHandler), i.$nextArrow.on(\"keydown.slick\", i.keyHandler)))\r\n  }, e.prototype.initDotEvents = function () {\r\n    var e = this;\r\n    !0 === e.options.dots && (i(\"li\", e.$dots).on(\"click.slick\", {\r\n      message: \"index\"\r\n    }, e.changeSlide), !0 === e.options.accessibility && e.$dots.on(\"keydown.slick\", e.keyHandler)), !0 === e.options.dots && !0 === e.options.pauseOnDotsHover && i(\"li\", e.$dots).on(\"mouseenter.slick\", i.proxy(e.interrupt, e, !0)).on(\"mouseleave.slick\", i.proxy(e.interrupt, e, !1))\r\n  }, e.prototype.initSlideEvents = function () {\r\n    var e = this;\r\n    e.options.pauseOnHover && (e.$list.on(\"mouseenter.slick\", i.proxy(e.interrupt, e, !0)), e.$list.on(\"mouseleave.slick\", i.proxy(e.interrupt, e, !1)))\r\n  }, e.prototype.initializeEvents = function () {\r\n    var e = this;\r\n    e.initArrowEvents(), e.initDotEvents(), e.initSlideEvents(), e.$list.on(\"touchstart.slick mousedown.slick\", {\r\n      action: \"start\"\r\n    }, e.swipeHandler), e.$list.on(\"touchmove.slick mousemove.slick\", {\r\n      action: \"move\"\r\n    }, e.swipeHandler), e.$list.on(\"touchend.slick mouseup.slick\", {\r\n      action: \"end\"\r\n    }, e.swipeHandler), e.$list.on(\"touchcancel.slick mouseleave.slick\", {\r\n      action: \"end\"\r\n    }, e.swipeHandler), e.$list.on(\"click.slick\", e.clickHandler), i(document).on(e.visibilityChange, i.proxy(e.visibility, e)), !0 === e.options.accessibility && e.$list.on(\"keydown.slick\", e.keyHandler), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().on(\"click.slick\", e.selectHandler), i(window).on(\"orientationchange.slick.slick-\" + e.instanceUid, i.proxy(e.orientationChange, e)), i(window).on(\"resize.slick.slick-\" + e.instanceUid, i.proxy(e.resize, e)), i(\"[draggable!=true]\", e.$slideTrack).on(\"dragstart\", e.preventDefault), i(window).on(\"load.slick.slick-\" + e.instanceUid, e.setPosition), i(e.setPosition)\r\n  }, e.prototype.initUI = function () {\r\n    var i = this;\r\n    !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.show(), i.$nextArrow.show()), !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.show()\r\n  }, e.prototype.keyHandler = function (i) {\r\n    var e = this;\r\n    i.target.tagName.match(\"TEXTAREA|INPUT|SELECT\") || (37 === i.keyCode && !0 === e.options.accessibility ? e.changeSlide({\r\n      data: {\r\n        message: !0 === e.options.rtl ? \"next\" : \"previous\"\r\n      }\r\n    }) : 39 === i.keyCode && !0 === e.options.accessibility && e.changeSlide({\r\n      data: {\r\n        message: !0 === e.options.rtl ? \"previous\" : \"next\"\r\n      }\r\n    }))\r\n  }, e.prototype.lazyLoad = function () {\r\n    function e(e) {\r\n      i(\"img[data-lazy]\", e).each(function () {\r\n        var e = i(this),\r\n          t = i(this).attr(\"data-lazy\"),\r\n          o = i(this).attr(\"data-srcset\"),\r\n          s = i(this).attr(\"data-sizes\") || n.$slider.attr(\"data-sizes\"),\r\n          r = document.createElement(\"img\");\r\n        r.onload = function () {\r\n          e.animate({\r\n            opacity: 0\r\n          }, 100, function () {\r\n            o && (e.attr(\"srcset\", o), s && e.attr(\"sizes\", s)), e.attr(\"src\", t).animate({\r\n              opacity: 1\r\n            }, 200, function () {\r\n              e.removeAttr(\"data-lazy data-srcset data-sizes\").removeClass(\"slick-loading\")\r\n            }), n.$slider.trigger(\"lazyLoaded\", [n, e, t])\r\n          })\r\n        }, r.onerror = function () {\r\n          e.removeAttr(\"data-lazy\").removeClass(\"slick-loading\").addClass(\"slick-lazyload-error\"), n.$slider.trigger(\"lazyLoadError\", [n, e, t])\r\n        }, r.src = t\r\n      })\r\n    }\r\n    var t, o, s, n = this;\r\n    if (!0 === n.options.centerMode ? !0 === n.options.infinite ? s = (o = n.currentSlide + (n.options.slidesToShow / 2 + 1)) + n.options.slidesToShow + 2 : (o = Math.max(0, n.currentSlide - (n.options.slidesToShow / 2 + 1)), s = n.options.slidesToShow / 2 + 1 + 2 + n.currentSlide) : (o = n.options.infinite ? n.options.slidesToShow + n.currentSlide : n.currentSlide, s = Math.ceil(o + n.options.slidesToShow), !0 === n.options.fade && (o > 0 && o--, s <= n.slideCount && s++)), t = n.$slider.find(\".slick-slide\").slice(o, s), \"anticipated\" === n.options.lazyLoad)\r\n      for (var r = o - 1, l = s, d = n.$slider.find(\".slick-slide\"), a = 0; a < n.options.slidesToScroll; a++) r < 0 && (r = n.slideCount - 1), t = (t = t.add(d.eq(r))).add(d.eq(l)), r--, l++;\r\n    e(t), n.slideCount <= n.options.slidesToShow ? e(n.$slider.find(\".slick-slide\")) : n.currentSlide >= n.slideCount - n.options.slidesToShow ? e(n.$slider.find(\".slick-cloned\").slice(0, n.options.slidesToShow)) : 0 === n.currentSlide && e(n.$slider.find(\".slick-cloned\").slice(-1 * n.options.slidesToShow))\r\n  }, e.prototype.loadSlider = function () {\r\n    var i = this;\r\n    i.setPosition(), i.$slideTrack.css({\r\n      opacity: 1\r\n    }), i.$slider.removeClass(\"slick-loading\"), i.initUI(), \"progressive\" === i.options.lazyLoad && i.progressiveLazyLoad()\r\n  }, e.prototype.next = e.prototype.slickNext = function () {\r\n    this.changeSlide({\r\n      data: {\r\n        message: \"next\"\r\n      }\r\n    })\r\n  }, e.prototype.orientationChange = function () {\r\n    var i = this;\r\n    i.checkResponsive(), i.setPosition()\r\n  }, e.prototype.pause = e.prototype.slickPause = function () {\r\n    var i = this;\r\n    i.autoPlayClear(), i.paused = !0\r\n  }, e.prototype.play = e.prototype.slickPlay = function () {\r\n    var i = this;\r\n    i.autoPlay(), i.options.autoplay = !0, i.paused = !1, i.focussed = !1, i.interrupted = !1\r\n  }, e.prototype.postSlide = function (e) {\r\n    var t = this;\r\n    t.unslicked || (t.$slider.trigger(\"afterChange\", [t, e]), t.animating = !1, t.slideCount > t.options.slidesToShow && t.setPosition(), t.swipeLeft = null, t.options.autoplay && t.autoPlay(), !0 === t.options.accessibility && (t.initADA(), t.options.focusOnChange && i(t.$slides.get(t.currentSlide)).attr(\"tabindex\", 0).focus()))\r\n  }, e.prototype.prev = e.prototype.slickPrev = function () {\r\n    this.changeSlide({\r\n      data: {\r\n        message: \"previous\"\r\n      }\r\n    })\r\n  }, e.prototype.preventDefault = function (i) {\r\n    i.preventDefault()\r\n  }, e.prototype.progressiveLazyLoad = function (e) {\r\n    e = e || 1;\r\n    var t, o, s, n, r, l = this,\r\n      d = i(\"img[data-lazy]\", l.$slider);\r\n    d.length ? (t = d.first(), o = t.attr(\"data-lazy\"), s = t.attr(\"data-srcset\"), n = t.attr(\"data-sizes\") || l.$slider.attr(\"data-sizes\"), (r = document.createElement(\"img\")).onload = function () {\r\n      s && (t.attr(\"srcset\", s), n && t.attr(\"sizes\", n)), t.attr(\"src\", o).removeAttr(\"data-lazy data-srcset data-sizes\").removeClass(\"slick-loading\"), !0 === l.options.adaptiveHeight && l.setPosition(), l.$slider.trigger(\"lazyLoaded\", [l, t, o]), l.progressiveLazyLoad()\r\n    }, r.onerror = function () {\r\n      e < 3 ? setTimeout(function () {\r\n        l.progressiveLazyLoad(e + 1)\r\n      }, 500) : (t.removeAttr(\"data-lazy\").removeClass(\"slick-loading\").addClass(\"slick-lazyload-error\"), l.$slider.trigger(\"lazyLoadError\", [l, t, o]), l.progressiveLazyLoad())\r\n    }, r.src = o) : l.$slider.trigger(\"allImagesLoaded\", [l])\r\n  }, e.prototype.refresh = function (e) {\r\n    var t, o, s = this;\r\n    o = s.slideCount - s.options.slidesToShow, !s.options.infinite && s.currentSlide > o && (s.currentSlide = o), s.slideCount <= s.options.slidesToShow && (s.currentSlide = 0), t = s.currentSlide, s.destroy(!0), i.extend(s, s.initials, {\r\n      currentSlide: t\r\n    }), s.init(), e || s.changeSlide({\r\n      data: {\r\n        message: \"index\",\r\n        index: t\r\n      }\r\n    }, !1)\r\n  }, e.prototype.registerBreakpoints = function () {\r\n    var e, t, o, s = this,\r\n      n = s.options.responsive || null;\r\n    if (\"array\" === i.type(n) && n.length) {\r\n      s.respondTo = s.options.respondTo || \"window\";\r\n      for (e in n)\r\n        if (o = s.breakpoints.length - 1, n.hasOwnProperty(e)) {\r\n          for (t = n[e].breakpoint; o >= 0;) s.breakpoints[o] && s.breakpoints[o] === t && s.breakpoints.splice(o, 1), o--;\r\n          s.breakpoints.push(t), s.breakpointSettings[t] = n[e].settings\r\n        } s.breakpoints.sort(function (i, e) {\r\n        return s.options.mobileFirst ? i - e : e - i\r\n      })\r\n    }\r\n  }, e.prototype.reinit = function () {\r\n    var e = this;\r\n    e.$slides = e.$slideTrack.children(e.options.slide).addClass(\"slick-slide\"), e.slideCount = e.$slides.length, e.currentSlide >= e.slideCount && 0 !== e.currentSlide && (e.currentSlide = e.currentSlide - e.options.slidesToScroll), e.slideCount <= e.options.slidesToShow && (e.currentSlide = 0), e.registerBreakpoints(), e.setProps(), e.setupInfinite(), e.buildArrows(), e.updateArrows(), e.initArrowEvents(), e.buildDots(), e.updateDots(), e.initDotEvents(), e.cleanUpSlideEvents(), e.initSlideEvents(), e.checkResponsive(!1, !0), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().on(\"click.slick\", e.selectHandler), e.setSlideClasses(\"number\" == typeof e.currentSlide ? e.currentSlide : 0), e.setPosition(), e.focusHandler(), e.paused = !e.options.autoplay, e.autoPlay(), e.$slider.trigger(\"reInit\", [e])\r\n  }, e.prototype.resize = function () {\r\n    var e = this;\r\n    i(window).width() !== e.windowWidth && (clearTimeout(e.windowDelay), e.windowDelay = window.setTimeout(function () {\r\n      e.windowWidth = i(window).width(), e.checkResponsive(), e.unslicked || e.setPosition()\r\n    }, 50))\r\n  }, e.prototype.removeSlide = e.prototype.slickRemove = function (i, e, t) {\r\n    var o = this;\r\n    if (i = \"boolean\" == typeof i ? !0 === (e = i) ? 0 : o.slideCount - 1 : !0 === e ? --i : i, o.slideCount < 1 || i < 0 || i > o.slideCount - 1) return !1;\r\n    o.unload(), !0 === t ? o.$slideTrack.children().remove() : o.$slideTrack.children(this.options.slide).eq(i).remove(), o.$slides = o.$slideTrack.children(this.options.slide), o.$slideTrack.children(this.options.slide).detach(), o.$slideTrack.append(o.$slides), o.$slidesCache = o.$slides, o.reinit()\r\n  }, e.prototype.setCSS = function (i) {\r\n    var e, t, o = this,\r\n      s = {};\r\n    !0 === o.options.rtl && (i = -i), e = \"left\" == o.positionProp ? Math.ceil(i) + \"px\" : \"0px\", t = \"top\" == o.positionProp ? Math.ceil(i) + \"px\" : \"0px\", s[o.positionProp] = i, !1 === o.transformsEnabled ? o.$slideTrack.css(s) : (s = {}, !1 === o.cssTransitions ? (s[o.animType] = \"translate(\" + e + \", \" + t + \")\", o.$slideTrack.css(s)) : (s[o.animType] = \"translate3d(\" + e + \", \" + t + \", 0px)\", o.$slideTrack.css(s)))\r\n  }, e.prototype.setDimensions = function () {\r\n    var i = this;\r\n    !1 === i.options.vertical ? !0 === i.options.centerMode && i.$list.css({\r\n      padding: \"0px \" + i.options.centerPadding\r\n    }) : (i.$list.height(i.$slides.first().outerHeight(!0) * i.options.slidesToShow), !0 === i.options.centerMode && i.$list.css({\r\n      padding: i.options.centerPadding + \" 0px\"\r\n    })), i.listWidth = i.$list.width(), i.listHeight = i.$list.height(), !1 === i.options.vertical && !1 === i.options.variableWidth ? (i.slideWidth = Math.ceil(i.listWidth / i.options.slidesToShow), i.$slideTrack.width(Math.ceil(i.slideWidth * i.$slideTrack.children(\".slick-slide\").length))) : !0 === i.options.variableWidth ? i.$slideTrack.width(5e3 * i.slideCount) : (i.slideWidth = Math.ceil(i.listWidth), i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0) * i.$slideTrack.children(\".slick-slide\").length)));\r\n    var e = i.$slides.first().outerWidth(!0) - i.$slides.first().width();\r\n    !1 === i.options.variableWidth && i.$slideTrack.children(\".slick-slide\").width(i.slideWidth - e)\r\n  }, e.prototype.setFade = function () {\r\n    var e, t = this;\r\n    t.$slides.each(function (o, s) {\r\n      e = t.slideWidth * o * -1, !0 === t.options.rtl ? i(s).css({\r\n        position: \"relative\",\r\n        right: e,\r\n        top: 0,\r\n        zIndex: t.options.zIndex - 2,\r\n        opacity: 0\r\n      }) : i(s).css({\r\n        position: \"relative\",\r\n        left: e,\r\n        top: 0,\r\n        zIndex: t.options.zIndex - 2,\r\n        opacity: 0\r\n      })\r\n    }), t.$slides.eq(t.currentSlide).css({\r\n      zIndex: t.options.zIndex - 1,\r\n      opacity: 1\r\n    })\r\n  }, e.prototype.setHeight = function () {\r\n    var i = this;\r\n    if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) {\r\n      var e = i.$slides.eq(i.currentSlide).outerHeight(!0);\r\n      i.$list.css(\"height\", e)\r\n    }\r\n  }, e.prototype.setOption = e.prototype.slickSetOption = function () {\r\n    var e, t, o, s, n, r = this,\r\n      l = !1;\r\n    if (\"object\" === i.type(arguments[0]) ? (o = arguments[0], l = arguments[1], n = \"multiple\") : \"string\" === i.type(arguments[0]) && (o = arguments[0], s = arguments[1], l = arguments[2], \"responsive\" === arguments[0] && \"array\" === i.type(arguments[1]) ? n = \"responsive\" : void 0 !== arguments[1] && (n = \"single\")), \"single\" === n) r.options[o] = s;\r\n    else if (\"multiple\" === n) i.each(o, function (i, e) {\r\n      r.options[i] = e\r\n    });\r\n    else if (\"responsive\" === n)\r\n      for (t in s)\r\n        if (\"array\" !== i.type(r.options.responsive)) r.options.responsive = [s[t]];\r\n        else {\r\n          for (e = r.options.responsive.length - 1; e >= 0;) r.options.responsive[e].breakpoint === s[t].breakpoint && r.options.responsive.splice(e, 1), e--;\r\n          r.options.responsive.push(s[t])\r\n        } l && (r.unload(), r.reinit())\r\n  }, e.prototype.setPosition = function () {\r\n    var i = this;\r\n    i.setDimensions(), i.setHeight(), !1 === i.options.fade ? i.setCSS(i.getLeft(i.currentSlide)) : i.setFade(), i.$slider.trigger(\"setPosition\", [i])\r\n  }, e.prototype.setProps = function () {\r\n    var i = this,\r\n      e = document.body.style;\r\n    i.positionProp = !0 === i.options.vertical ? \"top\" : \"left\", \"top\" === i.positionProp ? i.$slider.addClass(\"slick-vertical\") : i.$slider.removeClass(\"slick-vertical\"), void 0 === e.WebkitTransition && void 0 === e.MozTransition && void 0 === e.msTransition || !0 === i.options.useCSS && (i.cssTransitions = !0), i.options.fade && (\"number\" == typeof i.options.zIndex ? i.options.zIndex < 3 && (i.options.zIndex = 3) : i.options.zIndex = i.defaults.zIndex), void 0 !== e.OTransform && (i.animType = \"OTransform\", i.transformType = \"-o-transform\", i.transitionType = \"OTransition\", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), void 0 !== e.MozTransform && (i.animType = \"MozTransform\", i.transformType = \"-moz-transform\", i.transitionType = \"MozTransition\", void 0 === e.perspectiveProperty && void 0 === e.MozPerspective && (i.animType = !1)), void 0 !== e.webkitTransform && (i.animType = \"webkitTransform\", i.transformType = \"-webkit-transform\", i.transitionType = \"webkitTransition\", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), void 0 !== e.msTransform && (i.animType = \"msTransform\", i.transformType = \"-ms-transform\", i.transitionType = \"msTransition\", void 0 === e.msTransform && (i.animType = !1)), void 0 !== e.transform && !1 !== i.animType && (i.animType = \"transform\", i.transformType = \"transform\", i.transitionType = \"transition\"), i.transformsEnabled = i.options.useTransform && null !== i.animType && !1 !== i.animType\r\n  }, e.prototype.setSlideClasses = function (i) {\r\n    var e, t, o, s, n = this;\r\n    if (t = n.$slider.find(\".slick-slide\").removeClass(\"slick-active slick-center slick-current\").attr(\"aria-hidden\", \"true\"), n.$slides.eq(i).addClass(\"slick-current\"), !0 === n.options.centerMode) {\r\n      var r = n.options.slidesToShow % 2 == 0 ? 1 : 0;\r\n      e = Math.floor(n.options.slidesToShow / 2), !0 === n.options.infinite && (i >= e && i <= n.slideCount - 1 - e ? n.$slides.slice(i - e + r, i + e + 1).addClass(\"slick-active\").attr(\"aria-hidden\", \"false\") : (o = n.options.slidesToShow + i, t.slice(o - e + 1 + r, o + e + 2).addClass(\"slick-active\").attr(\"aria-hidden\", \"false\")), 0 === i ? t.eq(t.length - 1 - n.options.slidesToShow).addClass(\"slick-center\") : i === n.slideCount - 1 && t.eq(n.options.slidesToShow).addClass(\"slick-center\")), n.$slides.eq(i).addClass(\"slick-center\")\r\n    } else i >= 0 && i <= n.slideCount - n.options.slidesToShow ? n.$slides.slice(i, i + n.options.slidesToShow).addClass(\"slick-active\").attr(\"aria-hidden\", \"false\") : t.length <= n.options.slidesToShow ? t.addClass(\"slick-active\").attr(\"aria-hidden\", \"false\") : (s = n.slideCount % n.options.slidesToShow, o = !0 === n.options.infinite ? n.options.slidesToShow + i : i, n.options.slidesToShow == n.options.slidesToScroll && n.slideCount - i < n.options.slidesToShow ? t.slice(o - (n.options.slidesToShow - s), o + s).addClass(\"slick-active\").attr(\"aria-hidden\", \"false\") : t.slice(o, o + n.options.slidesToShow).addClass(\"slick-active\").attr(\"aria-hidden\", \"false\"));\r\n    \"ondemand\" !== n.options.lazyLoad && \"anticipated\" !== n.options.lazyLoad || n.lazyLoad()\r\n  }, e.prototype.setupInfinite = function () {\r\n    var e, t, o, s = this;\r\n    if (!0 === s.options.fade && (s.options.centerMode = !1), !0 === s.options.infinite && !1 === s.options.fade && (t = null, s.slideCount > s.options.slidesToShow)) {\r\n      for (o = !0 === s.options.centerMode ? s.options.slidesToShow + 1 : s.options.slidesToShow, e = s.slideCount; e > s.slideCount - o; e -= 1) t = e - 1, i(s.$slides[t]).clone(!0).attr(\"id\", \"\").attr(\"data-slick-index\", t - s.slideCount).prependTo(s.$slideTrack).addClass(\"slick-cloned\");\r\n      for (e = 0; e < o + s.slideCount; e += 1) t = e, i(s.$slides[t]).clone(!0).attr(\"id\", \"\").attr(\"data-slick-index\", t + s.slideCount).appendTo(s.$slideTrack).addClass(\"slick-cloned\");\r\n      s.$slideTrack.find(\".slick-cloned\").find(\"[id]\").each(function () {\r\n        i(this).attr(\"id\", \"\")\r\n      })\r\n    }\r\n  }, e.prototype.interrupt = function (i) {\r\n    var e = this;\r\n    i || e.autoPlay(), e.interrupted = i\r\n  }, e.prototype.selectHandler = function (e) {\r\n    var t = this,\r\n      o = i(e.target).is(\".slick-slide\") ? i(e.target) : i(e.target).parents(\".slick-slide\"),\r\n      s = parseInt(o.attr(\"data-slick-index\"));\r\n    s || (s = 0), t.slideCount <= t.options.slidesToShow ? t.slideHandler(s, !1, !0) : t.slideHandler(s)\r\n  }, e.prototype.slideHandler = function (i, e, t) {\r\n    var o, s, n, r, l, d = null,\r\n      a = this;\r\n    if (e = e || !1, !(!0 === a.animating && !0 === a.options.waitForAnimate || !0 === a.options.fade && a.currentSlide === i))\r\n      if (!1 === e && a.asNavFor(i), o = i, d = a.getLeft(o), r = a.getLeft(a.currentSlide), a.currentLeft = null === a.swipeLeft ? r : a.swipeLeft, !1 === a.options.infinite && !1 === a.options.centerMode && (i < 0 || i > a.getDotCount() * a.options.slidesToScroll)) !1 === a.options.fade && (o = a.currentSlide, !0 !== t ? a.animateSlide(r, function () {\r\n        a.postSlide(o)\r\n      }) : a.postSlide(o));\r\n      else if (!1 === a.options.infinite && !0 === a.options.centerMode && (i < 0 || i > a.slideCount - a.options.slidesToScroll)) !1 === a.options.fade && (o = a.currentSlide, !0 !== t ? a.animateSlide(r, function () {\r\n      a.postSlide(o)\r\n    }) : a.postSlide(o));\r\n    else {\r\n      if (a.options.autoplay && clearInterval(a.autoPlayTimer), s = o < 0 ? a.slideCount % a.options.slidesToScroll != 0 ? a.slideCount - a.slideCount % a.options.slidesToScroll : a.slideCount + o : o >= a.slideCount ? a.slideCount % a.options.slidesToScroll != 0 ? 0 : o - a.slideCount : o, a.animating = !0, a.$slider.trigger(\"beforeChange\", [a, a.currentSlide, s]), n = a.currentSlide, a.currentSlide = s, a.setSlideClasses(a.currentSlide), a.options.asNavFor && (l = (l = a.getNavTarget()).slick(\"getSlick\")).slideCount <= l.options.slidesToShow && l.setSlideClasses(a.currentSlide), a.updateDots(), a.updateArrows(), !0 === a.options.fade) return !0 !== t ? (a.fadeSlideOut(n), a.fadeSlide(s, function () {\r\n        a.postSlide(s)\r\n      })) : a.postSlide(s), void a.animateHeight();\r\n      !0 !== t ? a.animateSlide(d, function () {\r\n        a.postSlide(s)\r\n      }) : a.postSlide(s)\r\n    }\r\n  }, e.prototype.startLoad = function () {\r\n    var i = this;\r\n    !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.hide(), i.$nextArrow.hide()), !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.hide(), i.$slider.addClass(\"slick-loading\")\r\n  }, e.prototype.swipeDirection = function () {\r\n    var i, e, t, o, s = this;\r\n    return i = s.touchObject.startX - s.touchObject.curX, e = s.touchObject.startY - s.touchObject.curY, t = Math.atan2(e, i), (o = Math.round(180 * t / Math.PI)) < 0 && (o = 360 - Math.abs(o)), o <= 45 && o >= 0 ? !1 === s.options.rtl ? \"left\" : \"right\" : o <= 360 && o >= 315 ? !1 === s.options.rtl ? \"left\" : \"right\" : o >= 135 && o <= 225 ? !1 === s.options.rtl ? \"right\" : \"left\" : !0 === s.options.verticalSwiping ? o >= 35 && o <= 135 ? \"down\" : \"up\" : \"vertical\"\r\n  }, e.prototype.swipeEnd = function (i) {\r\n    var e, t, o = this;\r\n    if (o.dragging = !1, o.swiping = !1, o.scrolling) return o.scrolling = !1, !1;\r\n    if (o.interrupted = !1, o.shouldClick = !(o.touchObject.swipeLength > 10), void 0 === o.touchObject.curX) return !1;\r\n    if (!0 === o.touchObject.edgeHit && o.$slider.trigger(\"edge\", [o, o.swipeDirection()]), o.touchObject.swipeLength >= o.touchObject.minSwipe) {\r\n      switch (t = o.swipeDirection()) {\r\n        case \"left\":\r\n        case \"down\":\r\n          e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide + o.getSlideCount()) : o.currentSlide + o.getSlideCount(), o.currentDirection = 0;\r\n          break;\r\n        case \"right\":\r\n        case \"up\":\r\n          e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide - o.getSlideCount()) : o.currentSlide - o.getSlideCount(), o.currentDirection = 1\r\n      }\r\n      \"vertical\" != t && (o.slideHandler(e), o.touchObject = {}, o.$slider.trigger(\"swipe\", [o, t]))\r\n    } else o.touchObject.startX !== o.touchObject.curX && (o.slideHandler(o.currentSlide), o.touchObject = {})\r\n  }, e.prototype.swipeHandler = function (i) {\r\n    var e = this;\r\n    if (!(!1 === e.options.swipe || \"ontouchend\" in document && !1 === e.options.swipe || !1 === e.options.draggable && -1 !== i.type.indexOf(\"mouse\"))) switch (e.touchObject.fingerCount = i.originalEvent && void 0 !== i.originalEvent.touches ? i.originalEvent.touches.length : 1, e.touchObject.minSwipe = e.listWidth / e.options.touchThreshold, !0 === e.options.verticalSwiping && (e.touchObject.minSwipe = e.listHeight / e.options.touchThreshold), i.data.action) {\r\n      case \"start\":\r\n        e.swipeStart(i);\r\n        break;\r\n      case \"move\":\r\n        e.swipeMove(i);\r\n        break;\r\n      case \"end\":\r\n        e.swipeEnd(i)\r\n    }\r\n  }, e.prototype.swipeMove = function (i) {\r\n    var e, t, o, s, n, r, l = this;\r\n    return n = void 0 !== i.originalEvent ? i.originalEvent.touches : null, !(!l.dragging || l.scrolling || n && 1 !== n.length) && (e = l.getLeft(l.currentSlide), l.touchObject.curX = void 0 !== n ? n[0].pageX : i.clientX, l.touchObject.curY = void 0 !== n ? n[0].pageY : i.clientY, l.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(l.touchObject.curX - l.touchObject.startX, 2))), r = Math.round(Math.sqrt(Math.pow(l.touchObject.curY - l.touchObject.startY, 2))), !l.options.verticalSwiping && !l.swiping && r > 4 ? (l.scrolling = !0, !1) : (!0 === l.options.verticalSwiping && (l.touchObject.swipeLength = r), t = l.swipeDirection(), void 0 !== i.originalEvent && l.touchObject.swipeLength > 4 && (l.swiping = !0, i.preventDefault()), s = (!1 === l.options.rtl ? 1 : -1) * (l.touchObject.curX > l.touchObject.startX ? 1 : -1), !0 === l.options.verticalSwiping && (s = l.touchObject.curY > l.touchObject.startY ? 1 : -1), o = l.touchObject.swipeLength, l.touchObject.edgeHit = !1, !1 === l.options.infinite && (0 === l.currentSlide && \"right\" === t || l.currentSlide >= l.getDotCount() && \"left\" === t) && (o = l.touchObject.swipeLength * l.options.edgeFriction, l.touchObject.edgeHit = !0), !1 === l.options.vertical ? l.swipeLeft = e + o * s : l.swipeLeft = e + o * (l.$list.height() / l.listWidth) * s, !0 === l.options.verticalSwiping && (l.swipeLeft = e + o * s), !0 !== l.options.fade && !1 !== l.options.touchMove && (!0 === l.animating ? (l.swipeLeft = null, !1) : void l.setCSS(l.swipeLeft))))\r\n  }, e.prototype.swipeStart = function (i) {\r\n    var e, t = this;\r\n    if (t.interrupted = !0, 1 !== t.touchObject.fingerCount || t.slideCount <= t.options.slidesToShow) return t.touchObject = {}, !1;\r\n    void 0 !== i.originalEvent && void 0 !== i.originalEvent.touches && (e = i.originalEvent.touches[0]), t.touchObject.startX = t.touchObject.curX = void 0 !== e ? e.pageX : i.clientX, t.touchObject.startY = t.touchObject.curY = void 0 !== e ? e.pageY : i.clientY, t.dragging = !0\r\n  }, e.prototype.unfilterSlides = e.prototype.slickUnfilter = function () {\r\n    var i = this;\r\n    null !== i.$slidesCache && (i.unload(), i.$slideTrack.children(this.options.slide).detach(), i.$slidesCache.appendTo(i.$slideTrack), i.reinit())\r\n  }, e.prototype.unload = function () {\r\n    var e = this;\r\n    i(\".slick-cloned\", e.$slider).remove(), e.$dots && e.$dots.remove(), e.$prevArrow && e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.remove(), e.$nextArrow && e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.remove(), e.$slides.removeClass(\"slick-slide slick-active slick-visible slick-current\").attr(\"aria-hidden\", \"true\").css(\"width\", \"\")\r\n  }, e.prototype.unslick = function (i) {\r\n    var e = this;\r\n    e.$slider.trigger(\"unslick\", [e, i]), e.destroy()\r\n  }, e.prototype.updateArrows = function () {\r\n    var i = this;\r\n    Math.floor(i.options.slidesToShow / 2), !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && !i.options.infinite && (i.$prevArrow.removeClass(\"slick-disabled\").attr(\"aria-disabled\", \"false\"), i.$nextArrow.removeClass(\"slick-disabled\").attr(\"aria-disabled\", \"false\"), 0 === i.currentSlide ? (i.$prevArrow.addClass(\"slick-disabled\").attr(\"aria-disabled\", \"true\"), i.$nextArrow.removeClass(\"slick-disabled\").attr(\"aria-disabled\", \"false\")) : i.currentSlide >= i.slideCount - i.options.slidesToShow && !1 === i.options.centerMode ? (i.$nextArrow.addClass(\"slick-disabled\").attr(\"aria-disabled\", \"true\"), i.$prevArrow.removeClass(\"slick-disabled\").attr(\"aria-disabled\", \"false\")) : i.currentSlide >= i.slideCount - 1 && !0 === i.options.centerMode && (i.$nextArrow.addClass(\"slick-disabled\").attr(\"aria-disabled\", \"true\"), i.$prevArrow.removeClass(\"slick-disabled\").attr(\"aria-disabled\", \"false\")))\r\n  }, e.prototype.updateDots = function () {\r\n    var i = this;\r\n    null !== i.$dots && (i.$dots.find(\"li\").removeClass(\"slick-active\").end(), i.$dots.find(\"li\").eq(Math.floor(i.currentSlide / i.options.slidesToScroll)).addClass(\"slick-active\"))\r\n  }, e.prototype.visibility = function () {\r\n    var i = this;\r\n    i.options.autoplay && (document[i.hidden] ? i.interrupted = !0 : i.interrupted = !1)\r\n  }, i.fn.slick = function () {\r\n    var i, t, o = this,\r\n      s = arguments[0],\r\n      n = Array.prototype.slice.call(arguments, 1),\r\n      r = o.length;\r\n    for (i = 0; i < r; i++)\r\n      if (\"object\" == typeof s || void 0 === s ? o[i].slick = new e(o[i], s) : t = o[i].slick[s].apply(o[i].slick, n), void 0 !== t) return t;\r\n    return o\r\n  }\r\n});"],"file":"slick.min.min.js"}